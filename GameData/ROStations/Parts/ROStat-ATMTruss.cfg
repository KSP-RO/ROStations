PART
{
	module = Part
	name = ROStat-ATMTruss
	author = Zorg, Pap

	//  ============================================================================
	//  Model and Dimensions
	//  ============================================================================

	MODEL
	{
		model = ROStations/Assets/BDB/bluedog_skylab_ATM_truss_realscale
		rotation, 0, 180, 0
	}

	scale = 1.0

	node_stack_bottom 			= 0.0, -2.51926, 0.0, 0.0, -1.0, 0.0, 2
	node_attach					= 0.0, -3.91241, 0.0, 0.0, -1.0, 0.0, 2

	// stack, srfAttach, allowStack, allowSrfAttach, allowCollision
	attachRules = 1,1,1,1,0

	//  ============================================================================
	//  Title, Description, Category, Techs
	//  ============================================================================

	title = Skylab ATM Truss
	manufacturer = NASA
	description = The Apollo Telescope Mount truss is designed to be attached to the top of the Skylab Airlock and rotates from launch position to it's functioning position in flight.

	tags = station, truss, apollo, telescope, mount, atm

	mass = 1.0

	category = Utility

	TechRequired = unlockParts
	cost = 150
	entryCost = 1

	//  ============================================================================
	//	DO NOT CHANGE (Normally)
	//  ============================================================================

	maxTemp = 773.15
	skinMaxTemp = 873.15
	crashTolerance = 10
	breakingForce = 250
	breakingTorque = 250
	fuelCrossFeed = true
	subcategory = 0
	emissiveConstant = 0.85
	thermalMassModifier = 1.0
	skinMassPerArea = 2.0
	buoyancy = 0.95

	//  ============================================================================
	//  Modules and Resources
	//  ============================================================================

	NODE
	{
		transform = trussTop
		name = trussTop
		size = 2
		method = FIXED_JOINT
	}
	
	MODULE
	{
		name = ModuleRoboticServoHinge
		servoTransformName = TrussPivotBone
		baseTransformName = ATM_trussBase
		servoAttachNodes = trussTop
		servoSrfMeshNames = ServoMesh
		currentAngle = 0
		traverseVelocityLimits = 1, 4
		hardMinMaxLimits = 0, 90
		softMinMaxAngles = 0, 90
		hideUISoftMinMaxAngles = true
		targetAngle = 0
		maxMotorOutput = 50
		driveSpringMutliplier = 100
		driveDampingMutliplier = 20
		motorizedMassPerKN = 0.0002
		motorizedCostPerDriveUnit = 1
		connectedMassScale = 1
		efficiency = 0.75
		baseResourceConsumptionRate = 0.02
		referenceConsumptionVelocity = 180
		// if RESOURCE is used, negative power is simply dumped
		RESOURCE
		{
			name = ElectricCharge
			rate = 1
		}
		// INPUT_RESOURCE is by default equivalent to RESOURCE
		//INPUT_RESOURCE
		//{
		//	name = ElectricCharge
		//	rate = 1
		//}
		//OUTPUT_RESOURCE is required to reclaim energy from negative power
		//OUTPUT_RESOURCE
		//{
		//	name = ElectricCharge
		//	rate = 1
		//}
		mainAxis = X
	}

	MODULE
	{
		name = ModuleResourceAutoShiftState
		affectedResourceName = ElectricCharge
		affectedModuleName = ModuleRoboticServoHinge
		resourceShutOffHandler = true
		resourceStartUpHandler = true
		resourceShutOffStartUpUsePercent = true
		resourceShutOffAmount = 0
		resourceShutOffPercent = 0
		resourceStartUpAmount = 0
		resourceStartUpPercent = 5
	}

	MODULE
	{
		name = ModuleToggleCrossfeed
		toggleFlight = true
		toggleEditor = true
		crossfeedStatus = true
	}

	MODULE
	{
		name = SSTURecolorGUI
	}
}
